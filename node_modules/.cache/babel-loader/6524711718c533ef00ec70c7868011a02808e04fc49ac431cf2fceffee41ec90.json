{"ast":null,"code":"var _jsxFileName = \"/Users/guillermovarelli/Documents/workspace/act-front/src/WeightChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeightChart = () => {\n  _s();\n  const [newWeight, setNewWeight] = useState(\"\");\n  const [newDate, setNewDate] = useState(\"\");\n  const data = {\n    current: [{\n      weight: 84,\n      date: \"2025-01-01\"\n    }, {\n      weight: 83,\n      date: \"2025-02-01\"\n    }, {\n      weight: 82,\n      date: \"2025-03-01\"\n    }, {\n      weight: 81,\n      date: \"2025-04-01\"\n    }, {\n      weight: 80,\n      date: \"2025-05-01\"\n    }, {\n      weight: 79,\n      date: \"2025-06-01\"\n    }, {\n      weight: 78,\n      date: \"2025-07-01\"\n    }, {\n      weight: 77,\n      date: \"2025-08-01\"\n    }, {\n      weight: 76,\n      date: \"2025-09-01\"\n    }, {\n      weight: 75,\n      date: \"2025-10-01\"\n    }, {\n      weight: 74,\n      date: \"2025-11-01\"\n    }, {\n      weight: 73,\n      date: \"2025-12-01\"\n    }]\n  };\n\n  // Interpolar línea ideal (bajada lineal de 84 a 75 en 12 meses)\n  const idealStart = 84;\n  const idealEnd = 75;\n  const months = 12;\n  const step = (idealStart - idealEnd) / (months - 1);\n  const ideal = Array.from({\n    length: months\n  }, (_, i) => {\n    const date = new Date(2025, i, 1);\n    return {\n      x: date.getTime(),\n      y: +(idealStart - step * i).toFixed(1)\n    };\n  });\n  const current = data.current.map(d => ({\n    x: new Date(d.date).getTime(),\n    y: d.weight\n  }));\n  const options = {\n    chart: {\n      id: \"weight-chart\",\n      type: \"line\",\n      zoom: {\n        enabled: false\n      },\n      toolbar: {\n        show: false\n      }\n    },\n    xaxis: {\n      type: \"datetime\",\n      title: {\n        text: \"Fecha\"\n      },\n      labels: {\n        datetimeFormatter: {\n          month: \"MMM\",\n          year: \"yyyy\"\n        }\n      },\n      crosshairs: {\n        show: true,\n        position: \"front\",\n        stroke: {\n          color: \"#b6b6b6\",\n          width: 1,\n          dashArray: 3\n        }\n      }\n    },\n    yaxis: {\n      title: {\n        text: \"Peso (kg)\"\n      }\n    },\n    stroke: {\n      curve: \"smooth\"\n    },\n    markers: {\n      size: 4,\n      hover: {\n        size: 6\n      }\n    },\n    tooltip: {\n      shared: true,\n      intersect: false,\n      x: {\n        format: \"dd MMM yyyy\"\n      }\n    },\n    legend: {\n      show: false\n    },\n    colors: [\"#008FFB\", \"#00E396\"]\n  };\n  const series = [{\n    name: \"Ideal\",\n    data: ideal\n  }, {\n    name: \"Actual\",\n    data: current\n  }];\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(\"Nuevo peso:\", newWeight, \"Fecha:\", newDate);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"55%\",\n        padding: \"1.5rem\",\n        backgroundColor: \"white\",\n        borderRadius: \"1rem\",\n        boxShadow: \"0 4px 10px rgba(0,0,0,0.1)\",\n        fontFamily: \"Arial, sans-serif\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Chart, {\n        options: options,\n        series: series,\n        type: \"line\",\n        height: 300,\n        width: \"100%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s(WeightChart, \"a/j/EczaM1Y1oWOfxki4pcN7p74=\");\n_c = WeightChart;\nexport default WeightChart;\nvar _c;\n$RefreshReg$(_c, \"WeightChart\");","map":{"version":3,"names":["React","useState","Chart","jsxDEV","_jsxDEV","WeightChart","_s","newWeight","setNewWeight","newDate","setNewDate","data","current","weight","date","idealStart","idealEnd","months","step","ideal","Array","from","length","_","i","Date","x","getTime","y","toFixed","map","d","options","chart","id","type","zoom","enabled","toolbar","show","xaxis","title","text","labels","datetimeFormatter","month","year","crosshairs","position","stroke","color","width","dashArray","yaxis","curve","markers","size","hover","tooltip","shared","intersect","format","legend","colors","series","name","handleSubmit","e","preventDefault","console","log","style","display","justifyContent","children","padding","backgroundColor","borderRadius","boxShadow","fontFamily","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","height","_c","$RefreshReg$"],"sources":["/Users/guillermovarelli/Documents/workspace/act-front/src/WeightChart.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Chart from \"react-apexcharts\";\n\nconst WeightChart = () => {\n  const [newWeight, setNewWeight] = useState(\"\");\n  const [newDate, setNewDate] = useState(\"\");\n\n  const data = {\n    current: [\n      { weight: 84, date: \"2025-01-01\" },\n      { weight: 83, date: \"2025-02-01\" },\n      { weight: 82, date: \"2025-03-01\" },\n      { weight: 81, date: \"2025-04-01\" },\n      { weight: 80, date: \"2025-05-01\" },\n      { weight: 79, date: \"2025-06-01\" },\n      { weight: 78, date: \"2025-07-01\" },\n      { weight: 77, date: \"2025-08-01\" },\n      { weight: 76, date: \"2025-09-01\" },\n      { weight: 75, date: \"2025-10-01\" },\n      { weight: 74, date: \"2025-11-01\" },\n      { weight: 73, date: \"2025-12-01\" }\n    ]\n  };\n\n  // Interpolar línea ideal (bajada lineal de 84 a 75 en 12 meses)\n  const idealStart = 84;\n  const idealEnd = 75;\n  const months = 12;\n  const step = (idealStart - idealEnd) / (months - 1);\n\n  const ideal = Array.from({ length: months }, (_, i) => {\n    const date = new Date(2025, i, 1);\n    return {\n      x: date.getTime(),\n      y: +(idealStart - step * i).toFixed(1)\n    };\n  });\n\n  const current = data.current.map((d) => ({\n    x: new Date(d.date).getTime(),\n    y: d.weight\n  }));\n\n  const options = {\n    chart: {\n      id: \"weight-chart\",\n      type: \"line\",\n      zoom: { enabled: false },\n      toolbar: { show: false }\n    },\n    xaxis: {\n      type: \"datetime\",\n      title: { text: \"Fecha\" },\n      labels: {\n        datetimeFormatter: {\n          month: \"MMM\",\n          year: \"yyyy\"\n        }\n      },\n      crosshairs: {\n        show: true,\n        position: \"front\",\n        stroke: {\n          color: \"#b6b6b6\",\n          width: 1,\n          dashArray: 3\n        }\n      }\n    },\n    yaxis: {\n      title: { text: \"Peso (kg)\" }\n    },\n    stroke: {\n      curve: \"smooth\"\n    },\n    markers: {\n      size: 4,\n      hover: {\n        size: 6\n      }\n    },\n    tooltip: {\n      shared: true,\n      intersect: false,\n      x: {\n        format: \"dd MMM yyyy\"\n      }\n    },\n    legend: {\n      show: false\n    },\n    colors: [\"#008FFB\", \"#00E396\"]\n  };\n\n  const series = [\n    { name: \"Ideal\", data: ideal },\n    { name: \"Actual\", data: current }\n  ];\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"Nuevo peso:\", newWeight, \"Fecha:\", newDate);\n  };\n\n  return (\n    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n      <div style={{\n        width: \"55%\",\n        padding: \"1.5rem\",\n        backgroundColor: \"white\",\n        borderRadius: \"1rem\",\n        boxShadow: \"0 4px 10px rgba(0,0,0,0.1)\",\n        fontFamily: \"Arial, sans-serif\"\n      }}>\n        <form onSubmit={handleSubmit}>\n          {/* ... Tu formulario acá sin cambios ... */}\n        </form>\n        <Chart options={options} series={series} type=\"line\" height={300} width=\"100%\" />\n      </div>\n    </div>\n  );\n};\n\nexport default WeightChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}