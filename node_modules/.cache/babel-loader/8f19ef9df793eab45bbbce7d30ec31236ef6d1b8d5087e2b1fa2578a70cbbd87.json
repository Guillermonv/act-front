{"ast":null,"code":"var _jsxFileName = \"/Users/guillermovarelli/Documents/workspace/act-front/src/WeightChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeightChart = () => {\n  _s();\n  const [newWeight, setNewWeight] = useState(\"\");\n  const [newDate, setNewDate] = useState(\"\");\n  const data = {\n    ideal: [{\n      weight: 84,\n      date: \"2025-01-01\"\n    }, {\n      weight: 75,\n      date: \"2025-12-31\"\n    }],\n    current: [{\n      weight: 84,\n      date: \"2025-01-01\"\n    }, {\n      weight: 83,\n      date: \"2025-02-01\"\n    }, {\n      weight: 82,\n      date: \"2025-03-01\"\n    }, {\n      weight: 81,\n      date: \"2025-04-01\"\n    }, {\n      weight: 80,\n      date: \"2025-05-01\"\n    }, {\n      weight: 79,\n      date: \"2025-06-01\"\n    }, {\n      weight: 78,\n      date: \"2025-07-01\"\n    }, {\n      weight: 77,\n      date: \"2025-08-01\"\n    }, {\n      weight: 76,\n      date: \"2025-09-01\"\n    }, {\n      weight: 75,\n      date: \"2025-10-01\"\n    }, {\n      weight: 74,\n      date: \"2025-11-01\"\n    }, {\n      weight: 73,\n      date: \"2025-12-01\"\n    }]\n  };\n  const options = {\n    chart: {\n      id: \"weight-chart\",\n      type: \"line\",\n      zoom: {\n        enabled: false\n      }\n    },\n    xaxis: {\n      type: \"datetime\",\n      title: {\n        text: \"Fecha\"\n      },\n      labels: {\n        datetimeFormatter: {\n          month: \"MMM\",\n          year: \"yyyy\"\n        }\n      }\n    },\n    yaxis: {\n      title: {\n        text: \"Peso (kg)\"\n      }\n    },\n    stroke: {\n      curve: \"smooth\"\n    },\n    markers: {\n      size: 4\n    },\n    legend: {\n      position: \"top\"\n    }\n  };\n  const series = [{\n    name: \"Ideal\",\n    data: data.ideal.map(d => ({\n      x: new Date(d.date).getTime(),\n      y: d.weight\n    }))\n  }, {\n    name: \"Actual\",\n    data: data.current.map(d => ({\n      x: new Date(d.date).getTime(),\n      y: d.weight\n    }))\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      marginTop: \"1.5rem\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"80%\",\n        padding: \"1rem\",\n        backgroundColor: \"white\",\n        borderRadius: \"1rem\",\n        boxShadow: \"0 4px 10px rgba(0,0,0,0.1)\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          gap: \"1rem\",\n          marginBottom: \"1rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1,\n            textAlign: \"left\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              fontWeight: \"bold\"\n            },\n            children: \"Nuevo Peso:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: newWeight,\n            onChange: e => setNewWeight(e.target.value),\n            placeholder: \"kg\",\n            style: {\n              padding: \"0.5rem\",\n              borderRadius: \"0.5rem\",\n              border: \"1px solid #ccc\",\n              width: \"100%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1,\n            textAlign: \"center\",\n            fontWeight: \"bold\"\n          },\n          children: \"Peso Ideal: 75\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1,\n            textAlign: \"right\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: newDate,\n            onChange: e => setNewDate(e.target.value),\n            style: {\n              padding: \"0.5rem\",\n              borderRadius: \"0.5rem\",\n              border: \"1px solid #ccc\",\n              width: \"100%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          textAlign: \"center\",\n          fontSize: \"1.25rem\",\n          fontWeight: \"600\",\n          marginBottom: \"1rem\"\n        },\n        children: \"Progreso de Peso\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Chart, {\n        options: options,\n        series: series,\n        type: \"line\",\n        height: 350,\n        width: \"100%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(WeightChart, \"a/j/EczaM1Y1oWOfxki4pcN7p74=\");\n_c = WeightChart;\nexport default WeightChart;\nvar _c;\n$RefreshReg$(_c, \"WeightChart\");","map":{"version":3,"names":["React","useState","Chart","jsxDEV","_jsxDEV","WeightChart","_s","newWeight","setNewWeight","newDate","setNewDate","data","ideal","weight","date","current","options","chart","id","type","zoom","enabled","xaxis","title","text","labels","datetimeFormatter","month","year","yaxis","stroke","curve","markers","size","legend","position","series","name","map","d","x","Date","getTime","y","style","display","justifyContent","marginTop","children","width","padding","backgroundColor","borderRadius","boxShadow","alignItems","gap","marginBottom","flex","textAlign","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","border","fontSize","height","_c","$RefreshReg$"],"sources":["/Users/guillermovarelli/Documents/workspace/act-front/src/WeightChart.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Chart from \"react-apexcharts\";\n\nconst WeightChart = () => {\n  const [newWeight, setNewWeight] = useState(\"\");\n  const [newDate, setNewDate] = useState(\"\");\n\n  const data = {\n    ideal: [\n      { weight: 84, date: \"2025-01-01\" },\n      { weight: 75, date: \"2025-12-31\" }\n    ],\n    current: [\n      { weight: 84, date: \"2025-01-01\" },\n      { weight: 83, date: \"2025-02-01\" },\n      { weight: 82, date: \"2025-03-01\" },\n      { weight: 81, date: \"2025-04-01\" },\n      { weight: 80, date: \"2025-05-01\" },\n      { weight: 79, date: \"2025-06-01\" },\n      { weight: 78, date: \"2025-07-01\" },\n      { weight: 77, date: \"2025-08-01\" },\n      { weight: 76, date: \"2025-09-01\" },\n      { weight: 75, date: \"2025-10-01\" },\n      { weight: 74, date: \"2025-11-01\" },\n      { weight: 73, date: \"2025-12-01\" }\n    ]\n  };\n\n  const options = {\n    chart: {\n      id: \"weight-chart\",\n      type: \"line\",\n      zoom: { enabled: false }\n    },\n    xaxis: {\n      type: \"datetime\",\n      title: { text: \"Fecha\" },\n      labels: {\n        datetimeFormatter: {\n          month: \"MMM\",\n          year: \"yyyy\"\n        }\n      }\n    },\n    yaxis: {\n      title: { text: \"Peso (kg)\" }\n    },\n    stroke: {\n      curve: \"smooth\"\n    },\n    markers: {\n      size: 4\n    },\n    legend: {\n      position: \"top\"\n    }\n  };\n\n  const series = [\n    {\n      name: \"Ideal\",\n      data: data.ideal.map(d => ({ x: new Date(d.date).getTime(), y: d.weight }))\n    },\n    {\n      name: \"Actual\",\n      data: data.current.map(d => ({ x: new Date(d.date).getTime(), y: d.weight }))\n    }\n  ];\n\n  return (\n    <div style={{ display: \"flex\", justifyContent: \"center\", marginTop: \"1.5rem\" }}>\n      <div style={{ width: \"80%\", padding: \"1rem\", backgroundColor: \"white\", borderRadius: \"1rem\", boxShadow: \"0 4px 10px rgba(0,0,0,0.1)\" }}>\n        \n        {/* Formulario */}\n        <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", gap: \"1rem\", marginBottom: \"1rem\" }}>\n          \n          {/* Nuevo Peso */}\n          <div style={{ flex: 1, textAlign: \"left\" }}>\n            <label style={{ fontWeight: \"bold\" }}>Nuevo Peso:</label>\n            <input\n              type=\"number\"\n              value={newWeight}\n              onChange={(e) => setNewWeight(e.target.value)}\n              placeholder=\"kg\"\n              style={{ padding: \"0.5rem\", borderRadius: \"0.5rem\", border: \"1px solid #ccc\", width: \"100%\" }}\n            />\n          </div>\n\n          {/* Peso Ideal */}\n          <div style={{ flex: 1, textAlign: \"center\", fontWeight: \"bold\" }}>\n            Peso Ideal: 75\n          </div>\n\n          {/* Date Picker */}\n          <div style={{ flex: 1, textAlign: \"right\" }}>\n            <input\n              type=\"date\"\n              value={newDate}\n              onChange={(e) => setNewDate(e.target.value)}\n              style={{ padding: \"0.5rem\", borderRadius: \"0.5rem\", border: \"1px solid #ccc\", width: \"100%\" }}\n            />\n          </div>\n        </div>\n\n        {/* Título */}\n        <h2 style={{ textAlign: \"center\", fontSize: \"1.25rem\", fontWeight: \"600\", marginBottom: \"1rem\" }}>Progreso de Peso</h2>\n        \n        {/* Gráfico */}\n        <Chart options={options} series={series} type=\"line\" height={350} width=\"100%\" />\n      </div>\n    </div>\n  );\n};\n\nexport default WeightChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}