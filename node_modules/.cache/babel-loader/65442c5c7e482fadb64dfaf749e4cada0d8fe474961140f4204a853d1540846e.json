{"ast":null,"code":"var _jsxFileName = \"/Users/guillermovarelli/Documents/workspace/act-front/src/form/StatusModal.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StatusModal = ({\n  selectedCell,\n  setSelectedCell,\n  refreshData\n}) => {\n  var _statusLevels$find;\n  if (!selectedCell) return null;\n  const currentValue = ((_statusLevels$find = statusLevels.find(s => s.label === selectedCell.status)) === null || _statusLevels$find === void 0 ? void 0 : _statusLevels$find.value) || 0.55;\n  const handleStatusChange = (_, newValue) => {\n    const closestStatus = getClosestStatus(newValue);\n    setSelectedCell(prev => ({\n      ...prev,\n      status: closestStatus.label\n    }));\n  };\n  const handleSave = () => {\n    const closestStatus = getClosestStatus(currentValue);\n\n    // La fecha seleccionada en el modal es la misma que la del eje X\n    const formattedDate = selectedCell.date; // El formato ser치 YYYY-MM-DD\n\n    fetch(UPDATE_API_URL, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        date: formattedDate,\n        activity: selectedCell.activity,\n        status: closestStatus.label\n      })\n    }).then(() => {\n      console.log(\"Updated successfully\");\n      refreshData(); // 游대 volver a cargar los datos del heatmap\n    }).catch(err => console.error(\"Error updating:\", err));\n    setSelectedCell(null);\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    open: !!selectedCell,\n    onClose: () => setSelectedCell(null),\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 8,\n        bgcolor: \"#FFFFFF\",\n        borderRadius: 0,\n        boxShadow: 50,\n        maxWidth: 500,\n        maxHeight: 150,\n        margin: \"auto\",\n        display: \"flex\",\n        mt: 18,\n        flexDirection: \"column\",\n        fontFamily: \"Arial, sans-serif\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        justifyContent: \"space-between\",\n        alignItems: \"flex-start\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          color: \"text.secondary\",\n          sx: {\n            fontSize: \"1.3rem\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), \" \", selectedCell.date, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          color: \"text.secondary\",\n          sx: {\n            fontSize: \"1.3rem\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Activity:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), \" \", selectedCell.activity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flexGrow: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"success\",\n        onClick: handleSave,\n        sx: {\n          fontSize: \"1.2rem\",\n          fontWeight: \"bold\",\n          py: 1.5,\n          mt: \"auto\"\n        },\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_c = StatusModal;\nvar _c;\n$RefreshReg$(_c, \"StatusModal\");","map":{"version":3,"names":["StatusModal","selectedCell","setSelectedCell","refreshData","_statusLevels$find","currentValue","statusLevels","find","s","label","status","value","handleStatusChange","_","newValue","closestStatus","getClosestStatus","prev","handleSave","formattedDate","date","fetch","UPDATE_API_URL","method","headers","body","JSON","stringify","activity","then","console","log","catch","err","error","_jsxDEV","Modal","open","onClose","children","Box","sx","p","bgcolor","borderRadius","boxShadow","maxWidth","maxHeight","margin","display","mt","flexDirection","fontFamily","justifyContent","alignItems","Typography","variant","color","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","flexGrow","Button","onClick","fontWeight","py","_c","$RefreshReg$"],"sources":["/Users/guillermovarelli/Documents/workspace/act-front/src/form/StatusModal.js"],"sourcesContent":["const StatusModal = ({ selectedCell, setSelectedCell, refreshData }) => {\n  if (!selectedCell) return null;\n\n  const currentValue = statusLevels.find((s) => s.label === selectedCell.status)?.value || 0.55;\n\n  const handleStatusChange = (_, newValue) => {\n    const closestStatus = getClosestStatus(newValue);\n    setSelectedCell((prev) => ({ ...prev, status: closestStatus.label }));\n  };\n\n  const handleSave = () => {\n    const closestStatus = getClosestStatus(currentValue);\n\n    // La fecha seleccionada en el modal es la misma que la del eje X\n    const formattedDate = selectedCell.date; // El formato ser치 YYYY-MM-DD\n\n    fetch(UPDATE_API_URL, {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        date: formattedDate,\n        activity: selectedCell.activity,\n        status: closestStatus.label,\n      }),\n    })\n      .then(() => {\n        console.log(\"Updated successfully\");\n        refreshData(); // 游대 volver a cargar los datos del heatmap\n      })\n      .catch((err) => console.error(\"Error updating:\", err));\n\n    setSelectedCell(null);\n  };\n\n  return (\n    <Modal open={!!selectedCell} onClose={() => setSelectedCell(null)}>\n      <Box\n        sx={{\n          p: 8,\n          bgcolor: \"#FFFFFF\",\n          borderRadius: 0,\n          boxShadow: 50,\n          maxWidth: 500,\n          maxHeight: 150,\n          margin: \"auto\",\n          display: \"flex\",\n          mt: 18,\n          flexDirection: \"column\",\n          fontFamily: \"Arial, sans-serif\",\n        }}\n      >\n        {/* ... Slider y dem치s detalles */}\n\n        <Box justifyContent=\"space-between\" alignItems=\"flex-start\">\n          <Typography variant=\"body1\" color=\"text.secondary\" sx={{ fontSize: \"1.3rem\" }}>\n            <strong>Date:</strong> {selectedCell.date} {/* Fecha completa en formato YYYY-MM-DD */}\n          </Typography>\n          <Typography variant=\"body1\" color=\"text.secondary\" sx={{ fontSize: \"1.3rem\" }}>\n            <strong>Activity:</strong> {selectedCell.activity}\n          </Typography>\n        </Box>\n\n        <Box sx={{ flexGrow: 1 }} />\n\n        <Button\n          variant=\"contained\"\n          color=\"success\"\n          onClick={handleSave}\n          sx={{\n            fontSize: \"1.2rem\",\n            fontWeight: \"bold\",\n            py: 1.5,\n            mt: \"auto\",\n          }}\n        >\n          Save\n        </Button>\n      </Box>\n    </Modal>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}