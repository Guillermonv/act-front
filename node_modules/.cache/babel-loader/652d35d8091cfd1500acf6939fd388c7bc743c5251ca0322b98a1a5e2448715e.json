{"ast":null,"code":"var _jsxFileName = \"/Users/guillermovarelli/Documents/workspace/act-front/src/form/StatusModal.js\";\nimport React from \"react\";\nimport Modal from \"@mui/material/Modal\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Slider from \"@mui/material/Slider\";\nimport Button from \"@mui/material/Button\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UPDATE_API_URL = \"https://your-api.com/update\";\nconst statusLevels = [{\n  value: 0.15,\n  label: \"Suck\",\n  color: \"#000000\"\n}, {\n  value: 0.35,\n  label: \"Failed\",\n  color: \"#FF0000\"\n}, {\n  value: 0.55,\n  label: \"Regular\",\n  color: \"#FFFF00\"\n}, {\n  value: 0.75,\n  label: \"Accomplished\",\n  color: \"#00A100\"\n}, {\n  value: 0.95,\n  label: \"Excellence\",\n  color: \"#0000FF\"\n}];\nconst getColor = value => {\n  let closest = statusLevels.reduce((prev, curr) => Math.abs(curr.value - value) < Math.abs(prev.value - value) ? curr : prev);\n  return closest.color;\n};\nconst StatusModal = ({\n  selectedCell,\n  setSelectedCell\n}) => {\n  if (!selectedCell) return null;\n  const handleStatusChange = (_, newValue) => {\n    setSelectedCell(prev => ({\n      ...prev,\n      status: newValue\n    }));\n  };\n  const handleSave = () => {\n    fetch(UPDATE_API_URL, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        date: selectedCell.x,\n        activity: selectedCell.activity,\n        status: selectedCell.status\n      })\n    }).then(() => console.log(\"Updated successfully\"));\n    setSelectedCell(null);\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    open: !!selectedCell,\n    onClose: () => setSelectedCell(null),\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 5,\n        bgcolor: \"white\",\n        borderRadius: 3,\n        boxShadow: 6,\n        width: \"90vw\",\n        // Se adapta al tamaño de la pantalla\n        maxWidth: 800,\n        // Límite de ancho\n        margin: \"auto\",\n        mt: 10,\n        display: \"flex\",\n        flexDirection: \"column\",\n        gap: 3,\n        position: \"relative\",\n        fontFamily: \"Arial, sans-serif\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        sx: {\n          position: \"absolute\",\n          top: 10,\n          right: 10\n        },\n        onClick: () => setSelectedCell(null),\n        children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        color: \"text.secondary\",\n        sx: {\n          fontSize: \"1.3rem\",\n          textAlign: \"left\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Activity:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), \" \", selectedCell.activity]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        color: \"text.secondary\",\n        sx: {\n          fontSize: \"1.3rem\",\n          textAlign: \"left\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), \" \", selectedCell.x]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Slider, {\n        value: selectedCell.status,\n        step: 0.01,\n        marks: statusLevels.map(({\n          value,\n          label\n        }) => ({\n          value,\n          label\n        })),\n        min: 0.15,\n        max: 0.95,\n        onChange: handleStatusChange,\n        sx: {\n          color: getColor(selectedCell.status),\n          paddingRight: \"-10px\",\n          // Agrega espacio extra a la derecha del slider\n          '& .MuiSlider-markLabel': {\n            fontSize: \"1.2rem\",\n            fontWeight: \"bold\",\n            textAlign: \"center\"\n          },\n          '& .MuiSlider-markLabel:last-of-type': {\n            transform: \"translateX(-15%)\" // Mueve \"Excellence\" un poco a la izquierda\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleSave,\n        sx: {\n          fontSize: \"1.2rem\",\n          fontWeight: \"bold\",\n          py: 1.5\n        },\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_c = StatusModal;\nexport default StatusModal;\nvar _c;\n$RefreshReg$(_c, \"StatusModal\");","map":{"version":3,"names":["React","Modal","Box","Typography","Slider","Button","IconButton","CloseIcon","jsxDEV","_jsxDEV","UPDATE_API_URL","statusLevels","value","label","color","getColor","closest","reduce","prev","curr","Math","abs","StatusModal","selectedCell","setSelectedCell","handleStatusChange","_","newValue","status","handleSave","fetch","method","headers","body","JSON","stringify","date","x","activity","then","console","log","open","onClose","children","sx","p","bgcolor","borderRadius","boxShadow","width","maxWidth","margin","mt","display","flexDirection","gap","position","fontFamily","top","right","onClick","fileName","_jsxFileName","lineNumber","columnNumber","variant","fontSize","textAlign","step","marks","map","min","max","onChange","paddingRight","fontWeight","transform","py","_c","$RefreshReg$"],"sources":["/Users/guillermovarelli/Documents/workspace/act-front/src/form/StatusModal.js"],"sourcesContent":["import React from \"react\";\nimport Modal from \"@mui/material/Modal\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Slider from \"@mui/material/Slider\";\nimport Button from \"@mui/material/Button\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n\nconst UPDATE_API_URL = \"https://your-api.com/update\";\n\nconst statusLevels = [\n  { value: 0.15, label: \"Suck\", color: \"#000000\" },\n  { value: 0.35, label: \"Failed\", color: \"#FF0000\" },\n  { value: 0.55, label: \"Regular\", color: \"#FFFF00\" },\n  { value: 0.75, label: \"Accomplished\", color: \"#00A100\" },\n  { value: 0.95, label: \"Excellence\", color: \"#0000FF\" },\n];\n\nconst getColor = (value) => {\n  let closest = statusLevels.reduce((prev, curr) =>\n    Math.abs(curr.value - value) < Math.abs(prev.value - value) ? curr : prev\n  );\n  return closest.color;\n};\n\nconst StatusModal = ({ selectedCell, setSelectedCell }) => {\n  if (!selectedCell) return null;\n\n  const handleStatusChange = (_, newValue) => {\n    setSelectedCell((prev) => ({ ...prev, status: newValue }));\n  };\n\n  const handleSave = () => {\n    fetch(UPDATE_API_URL, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ date: selectedCell.x, activity: selectedCell.activity, status: selectedCell.status })\n    }).then(() => console.log(\"Updated successfully\"));\n    setSelectedCell(null);\n  };\n\n  return (\n    <Modal open={!!selectedCell} onClose={() => setSelectedCell(null)}>\n      <Box\n        sx={{\n          p: 5,\n          bgcolor: \"white\",\n          borderRadius: 3,\n          boxShadow: 6,\n          width: \"90vw\", // Se adapta al tamaño de la pantalla\n          maxWidth: 800, // Límite de ancho\n          margin: \"auto\",\n          mt: 10,\n          display: \"flex\",\n          flexDirection: \"column\",\n          gap: 3,\n          position: \"relative\",\n          fontFamily: \"Arial, sans-serif\",\n        }}\n      >\n        <IconButton sx={{ position: \"absolute\", top: 10, right: 10 }} onClick={() => setSelectedCell(null)}>\n          <CloseIcon />\n        </IconButton>\n\n        <Typography variant=\"body1\" color=\"text.secondary\" sx={{ fontSize: \"1.3rem\", textAlign: \"left\" }}>\n          <strong>Activity:</strong> {selectedCell.activity}\n        </Typography>\n        <Typography variant=\"body1\" color=\"text.secondary\" sx={{ fontSize: \"1.3rem\", textAlign: \"left\" }}>\n          <strong>Date:</strong> {selectedCell.x}\n        </Typography>\n\n        <Slider\n          value={selectedCell.status}\n          step={0.01}\n          marks={statusLevels.map(({ value, label }) => ({ value, label }))}\n          min={0.15}\n          max={0.95}\n          onChange={handleStatusChange}\n          sx={{\n            color: getColor(selectedCell.status),\n            paddingRight: \"-10px\", // Agrega espacio extra a la derecha del slider\n            '& .MuiSlider-markLabel': {\n              fontSize: \"1.2rem\",\n              fontWeight: \"bold\",\n              textAlign: \"center\",\n            },\n            '& .MuiSlider-markLabel:last-of-type': {\n              transform: \"translateX(-15%)\", // Mueve \"Excellence\" un poco a la izquierda\n            },\n          }}\n        />\n\n        <Button variant=\"contained\" color=\"primary\" onClick={handleSave} sx={{ fontSize: \"1.2rem\", fontWeight: \"bold\", py: 1.5 }}>\n          Save\n        </Button>\n      </Box>\n    </Modal>\n  );\n};\n\nexport default StatusModal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}