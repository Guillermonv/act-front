{"ast":null,"code":"var _jsxFileName = \"/Users/guillermovarelli/Documents/workspace/act-front/src/ApexChartMobile.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:8080/activities/grouped\";\nconst parseDate = dateStr => {\n  const [day, month, year] = dateStr.split(\"-\").map(Number);\n  return `${year}-${month.toString().padStart(2, \"0\")}-${day.toString().padStart(2, \"0\")}`;\n};\nconst transformData = data => {\n  const activityNames = Object.keys(data.activities);\n  const uniqueDates = [...new Set(Object.values(data.activities).flatMap(records => records.map(({\n    date\n  }) => parseDate(date))))].sort();\n\n  // Creamos un objeto con fechas como keys\n  const dateMap = {};\n  uniqueDates.forEach(date => {\n    dateMap[date] = {};\n    activityNames.forEach(activity => {\n      var _data$activities$acti;\n      const record = (_data$activities$acti = data.activities[activity]) === null || _data$activities$acti === void 0 ? void 0 : _data$activities$acti.find(r => parseDate(r.date) === date);\n      let yValue = null;\n      if (record) {\n        const status = (record.status || \"\").toLowerCase();\n        if (status === \"accomplished\") yValue = 1;else if (status === \"failed\") yValue = 0.2;else if (status === \"regular\") yValue = 0.5;else if (status === \"suck\") yValue = 0.001;else if (status === \"excellence\") yValue = 1.2;\n      }\n      dateMap[date][activity] = yValue;\n    });\n  });\n  return {\n    categories: activityNames,\n    series: uniqueDates.map(date => ({\n      name: date,\n      data: activityNames.map(activity => {\n        var _dateMap$date$activit;\n        return (_dateMap$date$activit = dateMap[date][activity]) !== null && _dateMap$date$activit !== void 0 ? _dateMap$date$activit : null;\n      })\n    }))\n  };\n};\nconst ApexChartMobile = () => {\n  _s();\n  const [chartData, setChartData] = useState({\n    series: [],\n    options: {}\n  });\n  useEffect(() => {\n    fetch(API_URL).then(response => response.json()).then(data => {\n      const {\n        series,\n        categories\n      } = transformData(data);\n      setChartData({\n        series,\n        options: {\n          chart: {\n            type: \"heatmap\",\n            height: \"auto\",\n            toolbar: {\n              show: false\n            }\n          },\n          plotOptions: {\n            heatmap: {\n              shadeIntensity: 0.5,\n              radius: 0,\n              useFillColorAsStroke: false,\n              colorScale: {\n                ranges: [{\n                  from: 0.001,\n                  to: 0.001,\n                  name: \"Suck\",\n                  color: \"#000000\"\n                }, {\n                  from: 0.2,\n                  to: 0.2,\n                  name: \"Failed\",\n                  color: \"#FF0000\"\n                }, {\n                  from: 0.5,\n                  to: 0.5,\n                  name: \"Regular\",\n                  color: \"#FFFF00\"\n                }, {\n                  from: 1,\n                  to: 1,\n                  name: \"Accomplished\",\n                  color: \"#00A100\"\n                }, {\n                  from: 1.2,\n                  to: 1.2,\n                  name: \"Excellence\",\n                  color: \"#0000FF\"\n                }, {\n                  from: null,\n                  to: null,\n                  name: \"No Status\",\n                  color: \"#FFFFFF\"\n                }]\n              }\n            }\n          },\n          dataLabels: {\n            enabled: false\n          },\n          xaxis: {\n            categories: categories,\n            position: \"top\",\n            // Actividades arriba\n            labels: {\n              rotate: -45,\n              offsetX: 10,\n              // mueve las etiquetas hacia la derecha\n              style: {\n                fontSize: \"12px\",\n                fontWeight: 600,\n                fontFamily: \"Roboto, sans-serif\"\n              }\n            }\n          },\n          grid: {\n            padding: {\n              top: 20,\n              // espacio arriba para que no quede apretado\n              left: 90,\n              // espacio a la izquierda\n              right: 0,\n              // espacio a la derecha, ayuda a que no corten las columnas\n              bottom: 10\n            }\n          },\n          yaxis: {\n            title: {\n              text: \"Fecha\"\n            },\n            labels: {\n              style: {\n                fontSize: \"10px\",\n                fontFamily: \"Roboto, sans-serif\"\n              }\n            },\n            reversed: true // Para que la fecha más nueva quede arriba si querés\n          },\n          grid: {\n            padding: {\n              right: 5,\n              left: 5\n            }\n          },\n          title: {\n            text: \"Activity Heatmap\",\n            style: {\n              fontSize: \"16px\",\n              fontWeight: \"bold\",\n              fontFamily: \"Roboto, sans-serif\"\n            }\n          }\n        }\n      });\n    }).catch(error => console.error(\"Error fetching data:\", error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: \"1rem\",\n      padding: \"1rem\"\n    },\n    children: /*#__PURE__*/_jsxDEV(ReactApexChart, {\n      options: chartData.options,\n      series: chartData.series,\n      type: \"heatmap\",\n      height: 4000,\n      width: \"100%\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n_s(ApexChartMobile, \"8upgyZxrcARtwMbQC3404UkohD4=\");\n_c = ApexChartMobile;\nexport default ApexChartMobile;\nvar _c;\n$RefreshReg$(_c, \"ApexChartMobile\");","map":{"version":3,"names":["React","useEffect","useState","ReactApexChart","jsxDEV","_jsxDEV","API_URL","parseDate","dateStr","day","month","year","split","map","Number","toString","padStart","transformData","data","activityNames","Object","keys","activities","uniqueDates","Set","values","flatMap","records","date","sort","dateMap","forEach","activity","_data$activities$acti","record","find","r","yValue","status","toLowerCase","categories","series","name","_dateMap$date$activit","ApexChartMobile","_s","chartData","setChartData","options","fetch","then","response","json","chart","type","height","toolbar","show","plotOptions","heatmap","shadeIntensity","radius","useFillColorAsStroke","colorScale","ranges","from","to","color","dataLabels","enabled","xaxis","position","labels","rotate","offsetX","style","fontSize","fontWeight","fontFamily","grid","padding","top","left","right","bottom","yaxis","title","text","reversed","catch","error","console","marginTop","children","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/guillermovarelli/Documents/workspace/act-front/src/ApexChartMobile.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\n\nconst API_URL = \"http://localhost:8080/activities/grouped\";\n\nconst parseDate = (dateStr) => {\n  const [day, month, year] = dateStr.split(\"-\").map(Number);\n  return `${year}-${month.toString().padStart(2, \"0\")}-${day.toString().padStart(2, \"0\")}`;\n};\n\nconst transformData = (data) => {\n  const activityNames = Object.keys(data.activities);\n  const uniqueDates = [...new Set(Object.values(data.activities).flatMap((records) => records.map(({ date }) => parseDate(date))))].sort();\n\n  // Creamos un objeto con fechas como keys\n  const dateMap = {};\n  uniqueDates.forEach((date) => {\n    dateMap[date] = {};\n    activityNames.forEach((activity) => {\n      const record = data.activities[activity]?.find((r) => parseDate(r.date) === date);\n      let yValue = null;\n      if (record) {\n        const status = (record.status || \"\").toLowerCase();\n        if (status === \"accomplished\") yValue = 1;\n        else if (status === \"failed\") yValue = 0.2;\n        else if (status === \"regular\") yValue = 0.5;\n        else if (status === \"suck\") yValue = 0.001;\n        else if (status === \"excellence\") yValue = 1.2;\n      }\n      dateMap[date][activity] = yValue;\n    });\n  });\n\n  return {\n    categories: activityNames,\n    series: uniqueDates.map((date) => ({\n      name: date,\n      data: activityNames.map((activity) => dateMap[date][activity] ?? null),\n    })),\n  };\n};\n\nconst ApexChartMobile = () => {\n  const [chartData, setChartData] = useState({ series: [], options: {} });\n\n  useEffect(() => {\n    fetch(API_URL)\n      .then((response) => response.json())\n      .then((data) => {\n        const { series, categories } = transformData(data);\n\n        setChartData({\n          series,\n          options: {\n            chart: {\n              type: \"heatmap\",\n              height: \"auto\",\n              toolbar: { show: false },\n            },\n            plotOptions: {\n              heatmap: {\n                shadeIntensity: 0.5,\n                radius: 0,\n                useFillColorAsStroke: false,\n                colorScale: {\n                  ranges: [\n                    { from: 0.001, to: 0.001, name: \"Suck\", color: \"#000000\" },\n                    { from: 0.2, to: 0.2, name: \"Failed\", color: \"#FF0000\" },\n                    { from: 0.5, to: 0.5, name: \"Regular\", color: \"#FFFF00\" },\n                    { from: 1, to: 1, name: \"Accomplished\", color: \"#00A100\" },\n                    { from: 1.2, to: 1.2, name: \"Excellence\", color: \"#0000FF\" },\n                    { from: null, to: null, name: \"No Status\", color: \"#FFFFFF\" },\n                  ],\n                },\n              },\n            },\n            dataLabels: {\n              enabled: false,\n            },\n            xaxis: {\n              categories: categories,\n              position: \"top\", // Actividades arriba\n              labels: {\n                rotate: -45,\n                offsetX: 10, // mueve las etiquetas hacia la derecha\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: 600,\n                  fontFamily: \"Roboto, sans-serif\",\n                },\n              },\n            },\n            grid: {\n              padding: {\n                top: 20,   // espacio arriba para que no quede apretado\n                left: 90,  // espacio a la izquierda\n                right: 0, // espacio a la derecha, ayuda a que no corten las columnas\n                bottom: 10,\n              },\n            },\n            \n            yaxis: {\n              title: { text: \"Fecha\" },\n              labels: {\n                style: {\n                  fontSize: \"10px\",\n                  fontFamily: \"Roboto, sans-serif\",\n                },\n              },\n              reversed: true, // Para que la fecha más nueva quede arriba si querés\n            },\n            grid: {\n              padding: { right: 5, left: 5 },\n            },\n            title: {\n              text: \"Activity Heatmap\",\n              style: {\n                fontSize: \"16px\",\n                fontWeight: \"bold\",\n                fontFamily: \"Roboto, sans-serif\",\n              },\n            },\n          },\n        });\n      })\n      .catch((error) => console.error(\"Error fetching data:\", error));\n  }, []);\n\n  return (\n    <div style={{ marginTop: \"1rem\", padding: \"1rem\" }}>\n      <ReactApexChart\n        options={chartData.options}\n        series={chartData.series}\n        type=\"heatmap\"\n        height={4000}\n        width=\"100%\"\n      />\n    </div>\n  );\n};\n\nexport default ApexChartMobile;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}