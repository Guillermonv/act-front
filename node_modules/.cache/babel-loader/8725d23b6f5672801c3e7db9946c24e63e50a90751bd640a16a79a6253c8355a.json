{"ast":null,"code":"var _jsxFileName = \"/Users/guillermovarelli/Documents/workspace/act-front/src/form/StatusModal.js\";\nimport React from \"react\";\nimport Modal from \"@mui/material/Modal\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Slider from \"@mui/material/Slider\";\nimport Button from \"@mui/material/Button\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UPDATE_API_URL = \"https://your-api.com/update\";\nconst statusLevels = [{\n  value: 0,\n  label: \"Suck\",\n  color: \"#000000\"\n}, {\n  value: 0.2,\n  label: \"Failed\",\n  color: \"#FF0000\"\n}, {\n  value: 0.5,\n  label: \"Regular\",\n  color: \"#FFFF00\"\n}, {\n  value: 1,\n  label: \"Accomplished\",\n  color: \"#00A100\"\n}, {\n  value: 1.2,\n  label: \"Excellence\",\n  color: \"#0000FF\"\n}];\nconst getColor = value => {\n  for (let i = 0; i < statusLevels.length - 1; i++) {\n    if (value >= statusLevels[i].value && value <= statusLevels[i + 1].value) {\n      return statusLevels[i].color;\n    }\n  }\n  return \"#000000\";\n};\nconst StatusModal = ({\n  selectedCell,\n  setSelectedCell\n}) => {\n  if (!selectedCell) return null;\n  const handleStatusChange = (_, newValue) => {\n    setSelectedCell(prev => ({\n      ...prev,\n      status: newValue\n    }));\n    fetch(UPDATE_API_URL, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        date: selectedCell.x,\n        activity: selectedCell.activity,\n        status: newValue\n      })\n    }).then(() => console.log(\"Updated successfully\"));\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    open: !!selectedCell,\n    onClose: () => setSelectedCell(null),\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 4,\n        bgcolor: \"white\",\n        borderRadius: 3,\n        boxShadow: 6,\n        maxWidth: 420,\n        margin: \"auto\",\n        mt: 10,\n        display: \"flex\",\n        flexDirection: \"column\",\n        gap: 2,\n        position: \"relative\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        sx: {\n          position: \"absolute\",\n          top: 10,\n          right: 10\n        },\n        onClick: () => setSelectedCell(null),\n        children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        fontWeight: \"bold\",\n        color: \"primary\",\n        children: \"Edit Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        color: \"text.secondary\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Activity:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), \" \", selectedCell.activity]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        color: \"text.secondary\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), \" \", selectedCell.x]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Slider, {\n        value: selectedCell.status,\n        step: null,\n        marks: statusLevels,\n        min: 0,\n        max: 1.2,\n        onChange: handleStatusChange,\n        sx: {\n          color: getColor(selectedCell.status)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => setSelectedCell(null),\n        children: \"Save & Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_c = StatusModal;\nexport default StatusModal;\nvar _c;\n$RefreshReg$(_c, \"StatusModal\");","map":{"version":3,"names":["React","Modal","Box","Typography","Slider","Button","IconButton","CloseIcon","jsxDEV","_jsxDEV","UPDATE_API_URL","statusLevels","value","label","color","getColor","i","length","StatusModal","selectedCell","setSelectedCell","handleStatusChange","_","newValue","prev","status","fetch","method","headers","body","JSON","stringify","date","x","activity","then","console","log","open","onClose","children","sx","p","bgcolor","borderRadius","boxShadow","maxWidth","margin","mt","display","flexDirection","gap","position","top","right","onClick","fileName","_jsxFileName","lineNumber","columnNumber","variant","fontWeight","step","marks","min","max","onChange","_c","$RefreshReg$"],"sources":["/Users/guillermovarelli/Documents/workspace/act-front/src/form/StatusModal.js"],"sourcesContent":["import React from \"react\";\nimport Modal from \"@mui/material/Modal\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Slider from \"@mui/material/Slider\";\nimport Button from \"@mui/material/Button\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n\nconst UPDATE_API_URL = \"https://your-api.com/update\";\n\nconst statusLevels = [\n  { value: 0, label: \"Suck\", color: \"#000000\" },\n  { value: 0.2, label: \"Failed\", color: \"#FF0000\" },\n  { value: 0.5, label: \"Regular\", color: \"#FFFF00\" },\n  { value: 1, label: \"Accomplished\", color: \"#00A100\" },\n  { value: 1.2, label: \"Excellence\", color: \"#0000FF\" },\n];\n\nconst getColor = (value) => {\n  for (let i = 0; i < statusLevels.length - 1; i++) {\n    if (value >= statusLevels[i].value && value <= statusLevels[i + 1].value) {\n      return statusLevels[i].color;\n    }\n  }\n  return \"#000000\";\n};\n\nconst StatusModal = ({ selectedCell, setSelectedCell }) => {\n  if (!selectedCell) return null;\n\n  const handleStatusChange = (_, newValue) => {\n    setSelectedCell((prev) => ({ ...prev, status: newValue }));\n\n    fetch(UPDATE_API_URL, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ date: selectedCell.x, activity: selectedCell.activity, status: newValue })\n    }).then(() => console.log(\"Updated successfully\"));\n  };\n\n  return (\n    <Modal open={!!selectedCell} onClose={() => setSelectedCell(null)}>\n      <Box\n        sx={{\n          p: 4,\n          bgcolor: \"white\",\n          borderRadius: 3,\n          boxShadow: 6,\n          maxWidth: 420,\n          margin: \"auto\",\n          mt: 10,\n          display: \"flex\",\n          flexDirection: \"column\",\n          gap: 2,\n          position: \"relative\",\n        }}\n      >\n        <IconButton sx={{ position: \"absolute\", top: 10, right: 10 }} onClick={() => setSelectedCell(null)}>\n          <CloseIcon />\n        </IconButton>\n\n        <Typography variant=\"h6\" fontWeight=\"bold\" color=\"primary\">\n          Edit Status\n        </Typography>\n\n        <Typography variant=\"body1\" color=\"text.secondary\">\n          <strong>Activity:</strong> {selectedCell.activity}\n        </Typography>\n        <Typography variant=\"body1\" color=\"text.secondary\">\n          <strong>Date:</strong> {selectedCell.x}\n        </Typography>\n\n        <Slider\n          value={selectedCell.status}\n          step={null}\n          marks={statusLevels}\n          min={0}\n          max={1.2}\n          onChange={handleStatusChange}\n          sx={{\n            color: getColor(selectedCell.status),\n          }}\n        />\n\n        <Button variant=\"contained\" color=\"primary\" onClick={() => setSelectedCell(null)}>\n          Save & Close\n        </Button>\n      </Box>\n    </Modal>\n  );\n};\n\nexport default StatusModal;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,SAAS,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,cAAc,GAAG,6BAA6B;AAEpD,MAAMC,YAAY,GAAG,CACnB;EAAEC,KAAK,EAAE,CAAC;EAAEC,KAAK,EAAE,MAAM;EAAEC,KAAK,EAAE;AAAU,CAAC,EAC7C;EAAEF,KAAK,EAAE,GAAG;EAAEC,KAAK,EAAE,QAAQ;EAAEC,KAAK,EAAE;AAAU,CAAC,EACjD;EAAEF,KAAK,EAAE,GAAG;EAAEC,KAAK,EAAE,SAAS;EAAEC,KAAK,EAAE;AAAU,CAAC,EAClD;EAAEF,KAAK,EAAE,CAAC;EAAEC,KAAK,EAAE,cAAc;EAAEC,KAAK,EAAE;AAAU,CAAC,EACrD;EAAEF,KAAK,EAAE,GAAG;EAAEC,KAAK,EAAE,YAAY;EAAEC,KAAK,EAAE;AAAU,CAAC,CACtD;AAED,MAAMC,QAAQ,GAAIH,KAAK,IAAK;EAC1B,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,YAAY,CAACM,MAAM,GAAG,CAAC,EAAED,CAAC,EAAE,EAAE;IAChD,IAAIJ,KAAK,IAAID,YAAY,CAACK,CAAC,CAAC,CAACJ,KAAK,IAAIA,KAAK,IAAID,YAAY,CAACK,CAAC,GAAG,CAAC,CAAC,CAACJ,KAAK,EAAE;MACxE,OAAOD,YAAY,CAACK,CAAC,CAAC,CAACF,KAAK;IAC9B;EACF;EACA,OAAO,SAAS;AAClB,CAAC;AAED,MAAMI,WAAW,GAAGA,CAAC;EAAEC,YAAY;EAAEC;AAAgB,CAAC,KAAK;EACzD,IAAI,CAACD,YAAY,EAAE,OAAO,IAAI;EAE9B,MAAME,kBAAkB,GAAGA,CAACC,CAAC,EAAEC,QAAQ,KAAK;IAC1CH,eAAe,CAAEI,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAEC,MAAM,EAAEF;IAAS,CAAC,CAAC,CAAC;IAE1DG,KAAK,CAAChB,cAAc,EAAE;MACpBiB,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,IAAI,EAAEb,YAAY,CAACc,CAAC;QAAEC,QAAQ,EAAEf,YAAY,CAACe,QAAQ;QAAET,MAAM,EAAEF;MAAS,CAAC;IAClG,CAAC,CAAC,CAACY,IAAI,CAAC,MAAMC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC,CAAC;EACpD,CAAC;EAED,oBACE5B,OAAA,CAACR,KAAK;IAACqC,IAAI,EAAE,CAAC,CAACnB,YAAa;IAACoB,OAAO,EAAEA,CAAA,KAAMnB,eAAe,CAAC,IAAI,CAAE;IAAAoB,QAAA,eAChE/B,OAAA,CAACP,GAAG;MACFuC,EAAE,EAAE;QACFC,CAAC,EAAE,CAAC;QACJC,OAAO,EAAE,OAAO;QAChBC,YAAY,EAAE,CAAC;QACfC,SAAS,EAAE,CAAC;QACZC,QAAQ,EAAE,GAAG;QACbC,MAAM,EAAE,MAAM;QACdC,EAAE,EAAE,EAAE;QACNC,OAAO,EAAE,MAAM;QACfC,aAAa,EAAE,QAAQ;QACvBC,GAAG,EAAE,CAAC;QACNC,QAAQ,EAAE;MACZ,CAAE;MAAAZ,QAAA,gBAEF/B,OAAA,CAACH,UAAU;QAACmC,EAAE,EAAE;UAAEW,QAAQ,EAAE,UAAU;UAAEC,GAAG,EAAE,EAAE;UAAEC,KAAK,EAAE;QAAG,CAAE;QAACC,OAAO,EAAEA,CAAA,KAAMnC,eAAe,CAAC,IAAI,CAAE;QAAAoB,QAAA,eACjG/B,OAAA,CAACF,SAAS;UAAAiD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAEblD,OAAA,CAACN,UAAU;QAACyD,OAAO,EAAC,IAAI;QAACC,UAAU,EAAC,MAAM;QAAC/C,KAAK,EAAC,SAAS;QAAA0B,QAAA,EAAC;MAE3D;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eAEblD,OAAA,CAACN,UAAU;QAACyD,OAAO,EAAC,OAAO;QAAC9C,KAAK,EAAC,gBAAgB;QAAA0B,QAAA,gBAChD/B,OAAA;UAAA+B,QAAA,EAAQ;QAAS;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACxC,YAAY,CAACe,QAAQ;MAAA;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC,CAAC,eACblD,OAAA,CAACN,UAAU;QAACyD,OAAO,EAAC,OAAO;QAAC9C,KAAK,EAAC,gBAAgB;QAAA0B,QAAA,gBAChD/B,OAAA;UAAA+B,QAAA,EAAQ;QAAK;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACxC,YAAY,CAACc,CAAC;MAAA;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC,eAEblD,OAAA,CAACL,MAAM;QACLQ,KAAK,EAAEO,YAAY,CAACM,MAAO;QAC3BqC,IAAI,EAAE,IAAK;QACXC,KAAK,EAAEpD,YAAa;QACpBqD,GAAG,EAAE,CAAE;QACPC,GAAG,EAAE,GAAI;QACTC,QAAQ,EAAE7C,kBAAmB;QAC7BoB,EAAE,EAAE;UACF3B,KAAK,EAAEC,QAAQ,CAACI,YAAY,CAACM,MAAM;QACrC;MAAE;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAEFlD,OAAA,CAACJ,MAAM;QAACuD,OAAO,EAAC,WAAW;QAAC9C,KAAK,EAAC,SAAS;QAACyC,OAAO,EAAEA,CAAA,KAAMnC,eAAe,CAAC,IAAI,CAAE;QAAAoB,QAAA,EAAC;MAElF;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEZ,CAAC;AAACQ,EAAA,GA/DIjD,WAAW;AAiEjB,eAAeA,WAAW;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}