{"ast":null,"code":"var _jsxFileName = \"/Users/guillermovarelli/Documents/workspace/act-front/src/WeightChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Chart from \"react-apexcharts\";\n\n// Interpolación con null fuera del rango válido\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst interpolateWithNullsOutside = (data, allDates) => {\n  const result = [];\n  const start = new Date(data[0].date).getTime();\n  const end = new Date(data[data.length - 1].date).getTime();\n  allDates.forEach(date => {\n    const dateMs = new Date(date).getTime();\n    if (dateMs < start || dateMs > end) {\n      result.push({\n        x: dateMs,\n        y: null\n      });\n      return;\n    }\n    let i = 0;\n    while (i < data.length && new Date(data[i].date).getTime() < dateMs) {\n      i++;\n    }\n    if (i === 0) {\n      result.push({\n        x: dateMs,\n        y: data[0].weight\n      });\n    } else if (i === data.length) {\n      result.push({\n        x: dateMs,\n        y: data[data.length - 1].weight\n      });\n    } else {\n      const prev = data[i - 1];\n      const next = data[i];\n      const t = (dateMs - new Date(prev.date).getTime()) / (new Date(next.date).getTime() - new Date(prev.date).getTime());\n      const y = prev.weight + t * (next.weight - prev.weight);\n      result.push({\n        x: dateMs,\n        y\n      });\n    }\n  });\n  return result;\n};\nconst WeightChart = () => {\n  _s();\n  const [chartData, setChartData] = useState({\n    ideal: [],\n    current: []\n  });\n  useEffect(() => {\n    fetch(\"https://weight.free.beeceptor.com/weights\").then(res => res.json()).then(data => setChartData(data)).catch(err => console.error(\"Error fetching data:\", err));\n  }, []);\n  if (!chartData.ideal.length || !chartData.current.length) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Cargando...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 68\n  }, this);\n\n  // Crear fechas únicas ordenadas desde todas las líneas\n  const allDates = Array.from(new Set([...chartData.ideal.map(d => d.date), ...chartData.current.map(d => d.date)])).map(d => new Date(d)).sort((a, b) => a - b).map(d => d.toISOString().slice(0, 10));\n  const series = [{\n    name: \"Ideal\",\n    data: interpolateWithNullsOutside(chartData.ideal, allDates)\n  }, {\n    name: \"Actual\",\n    data: interpolateWithNullsOutside(chartData.current, allDates)\n  }];\n  const options = {\n    chart: {\n      id: \"weight-chart\",\n      type: \"line\",\n      zoom: {\n        enabled: false\n      },\n      toolbar: {\n        show: false\n      }\n    },\n    xaxis: {\n      type: \"datetime\",\n      title: {\n        text: \"Fecha\"\n      },\n      labels: {\n        formatter: value => {\n          const date = new Date(value);\n          return `${date.getDate()} ${date.toLocaleString(\"default\", {\n            month: \"short\"\n          })} ${date.getFullYear()}`;\n        }\n      }\n    },\n    yaxis: {\n      title: {\n        text: \"Peso (kg)\"\n      },\n      labels: {\n        formatter: value => Math.floor(value)\n      }\n    },\n    stroke: {\n      curve: \"smooth\",\n      width: 2\n    },\n    markers: {\n      size: 0 // Oculta los puntos\n    },\n    tooltip: {\n      shared: true,\n      intersect: false,\n      x: {\n        format: \"dd MMM yyyy\"\n      },\n      y: {\n        formatter: val => val !== null ? val.toFixed(2) : \"-\"\n      }\n    },\n    legend: {\n      show: true,\n      position: \"top\",\n      horizontalAlign: \"right\"\n    },\n    colors: [\"#008FFB\", \"#00E396\"]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"60%\",\n        padding: \"1.5rem\",\n        backgroundColor: \"white\",\n        borderRadius: \"1rem\",\n        boxShadow: \"0 4px 10px rgba(0,0,0,0.1)\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Chart, {\n        options: options,\n        series: series,\n        type: \"line\",\n        height: 320,\n        width: \"100%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n_s(WeightChart, \"C0ucYHjExM9jtql1tH/czz3bn/o=\");\n_c = WeightChart;\nexport default WeightChart;\nvar _c;\n$RefreshReg$(_c, \"WeightChart\");","map":{"version":3,"names":["React","useEffect","useState","Chart","jsxDEV","_jsxDEV","interpolateWithNullsOutside","data","allDates","result","start","Date","date","getTime","end","length","forEach","dateMs","push","x","y","i","weight","prev","next","t","WeightChart","_s","chartData","setChartData","ideal","current","fetch","then","res","json","catch","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","Array","from","Set","map","d","sort","a","b","toISOString","slice","series","name","options","chart","id","type","zoom","enabled","toolbar","show","xaxis","title","text","labels","formatter","value","getDate","toLocaleString","month","getFullYear","yaxis","Math","floor","stroke","curve","width","markers","size","tooltip","shared","intersect","format","val","toFixed","legend","position","horizontalAlign","colors","style","display","justifyContent","padding","backgroundColor","borderRadius","boxShadow","height","_c","$RefreshReg$"],"sources":["/Users/guillermovarelli/Documents/workspace/act-front/src/WeightChart.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Chart from \"react-apexcharts\";\n\n// Interpolación con null fuera del rango válido\nconst interpolateWithNullsOutside = (data, allDates) => {\n  const result = [];\n  const start = new Date(data[0].date).getTime();\n  const end = new Date(data[data.length - 1].date).getTime();\n\n  allDates.forEach(date => {\n    const dateMs = new Date(date).getTime();\n\n    if (dateMs < start || dateMs > end) {\n      result.push({ x: dateMs, y: null });\n      return;\n    }\n\n    let i = 0;\n    while (i < data.length && new Date(data[i].date).getTime() < dateMs) {\n      i++;\n    }\n\n    if (i === 0) {\n      result.push({ x: dateMs, y: data[0].weight });\n    } else if (i === data.length) {\n      result.push({ x: dateMs, y: data[data.length - 1].weight });\n    } else {\n      const prev = data[i - 1];\n      const next = data[i];\n      const t = (dateMs - new Date(prev.date).getTime()) / (new Date(next.date).getTime() - new Date(prev.date).getTime());\n      const y = prev.weight + t * (next.weight - prev.weight);\n      result.push({ x: dateMs, y });\n    }\n  });\n\n  return result;\n};\n\nconst WeightChart = () => {\n  const [chartData, setChartData] = useState({ ideal: [], current: [] });\n\n  useEffect(() => {\n    fetch(\"https://weight.free.beeceptor.com/weights\")\n      .then((res) => res.json())\n      .then((data) => setChartData(data))\n      .catch((err) => console.error(\"Error fetching data:\", err));\n  }, []);\n\n  if (!chartData.ideal.length || !chartData.current.length) return <p>Cargando...</p>;\n\n  // Crear fechas únicas ordenadas desde todas las líneas\n  const allDates = Array.from(\n    new Set([\n      ...chartData.ideal.map(d => d.date),\n      ...chartData.current.map(d => d.date)\n    ])\n  )\n    .map(d => new Date(d))\n    .sort((a, b) => a - b)\n    .map(d => d.toISOString().slice(0, 10));\n\n  const series = [\n    {\n      name: \"Ideal\",\n      data: interpolateWithNullsOutside(chartData.ideal, allDates)\n    },\n    {\n      name: \"Actual\",\n      data: interpolateWithNullsOutside(chartData.current, allDates)\n    }\n  ];\n\n  const options = {\n    chart: {\n      id: \"weight-chart\",\n      type: \"line\",\n      zoom: { enabled: false },\n      toolbar: { show: false }\n    },\n    xaxis: {\n      type: \"datetime\",\n      title: { text: \"Fecha\" },\n      labels: {\n        formatter: (value) => {\n          const date = new Date(value);\n          return `${date.getDate()} ${date.toLocaleString(\"default\", { month: \"short\" })} ${date.getFullYear()}`;\n        }\n      }\n    },\n    yaxis: {\n      title: { text: \"Peso (kg)\" },\n      labels: {\n        formatter: (value) => Math.floor(value)\n      }\n    },\n    stroke: {\n      curve: \"smooth\",\n      width: 2\n    },\n    markers: {\n      size: 0 // Oculta los puntos\n    },\n    tooltip: {\n      shared: true,\n      intersect: false,\n      x: {\n        format: \"dd MMM yyyy\"\n      },\n      y: {\n        formatter: (val) => (val !== null ? val.toFixed(2) : \"-\")\n      }\n    },\n    legend: {\n      show: true,\n      position: \"top\",\n      horizontalAlign: \"right\"\n    },\n    colors: [\"#008FFB\", \"#00E396\"]\n  };\n\n  return (\n    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n      <div style={{\n        width: \"60%\",\n        padding: \"1.5rem\",\n        backgroundColor: \"white\",\n        borderRadius: \"1rem\",\n        boxShadow: \"0 4px 10px rgba(0,0,0,0.1)\"\n      }}>\n        <Chart options={options} series={series} type=\"line\" height={320} width=\"100%\" />\n      </div>\n    </div>\n  );\n};\n\nexport default WeightChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}