{"ast":null,"code":"var _jsxFileName = \"/Users/guillermovarelli/Documents/workspace/act-front/src/form/StatusModal.js\";\nimport React from \"react\";\nimport Modal from \"@mui/material/Modal\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Slider from \"@mui/material/Slider\";\nimport Button from \"@mui/material/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UPDATE_API_URL = \"http://localhost:8080/activities/update\";\nconst statusLevels = [{\n  value: 0.15,\n  label: \"Suck\",\n  color: \"#000000\"\n}, {\n  value: 0.35,\n  label: \"Failed\",\n  color: \"#FF0000\"\n}, {\n  value: 0.55,\n  label: \"Regular\",\n  color: \"#FFFF00\"\n}, {\n  value: 0.75,\n  label: \"Accomplished\",\n  color: \"#00A100\"\n}, {\n  value: 0.95,\n  label: \"Excellence\",\n  color: \"#0000FF\"\n}];\nconst getColor = value => {\n  let closest = statusLevels.reduce((prev, curr) => Math.abs(curr.value - value) < Math.abs(prev.value - value) ? curr : prev);\n  return closest.color;\n};\nconst getClosestStatus = value => {\n  return statusLevels.reduce((prev, curr) => Math.abs(curr.value - value) < Math.abs(prev.value - value) ? curr : prev);\n};\nconst formatDate = isoDate => {\n  const [year, month, day] = isoDate.split(\"-\");\n  return `${day}-${month}-${year}`;\n};\nconst StatusModal = ({\n  selectedCell,\n  setSelectedCell,\n  refreshHeatmap\n}) => {\n  if (!selectedCell) return null;\n  const handleStatusChange = (_, newValue) => {\n    setSelectedCell(prev => ({\n      ...prev,\n      status: newValue\n    }));\n  };\n  const handleSave = () => {\n    const closestStatus = getClosestStatus(selectedCell.status);\n    const formattedDate = formatDate(selectedCell.x);\n    fetch(UPDATE_API_URL, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        date: formattedDate,\n        activity: selectedCell.activity,\n        status: closestStatus.label\n      })\n    }).then(() => {\n      console.log(\"Updated successfully\");\n      refreshHeatmap === null || refreshHeatmap === void 0 ? void 0 : refreshHeatmap(); // ðŸ‘ˆ actualiza heatmap\n      setSelectedCell(null);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    open: !!selectedCell,\n    onClose: () => setSelectedCell(null),\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 7,\n        bgcolor: \"#F5F5DC\",\n        borderRadius: 2,\n        boxShadow: 0,\n        width: \"90vw\",\n        maxWidth: 650,\n        maxHeight: 750,\n        margin: \"auto\",\n        mt: 18,\n        display: \"flex\",\n        flexDirection: \"column\",\n        gap: 1,\n        fontFamily: \"Arial, sans-serif\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"flex-start\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          color: \"text.secondary\",\n          sx: {\n            fontSize: \"1.3rem\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), \" \", selectedCell.x]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          color: \"text.secondary\",\n          sx: {\n            fontSize: \"1.3rem\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Activity:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), \" \", selectedCell.activity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Slider, {\n        value: selectedCell.status,\n        step: 0.01,\n        marks: statusLevels.map(({\n          value,\n          label,\n          color\n        }) => ({\n          value,\n          label: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: color,\n              fontSize: \"1.2rem\",\n              fontWeight: \"bold\"\n            },\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this)\n        })),\n        min: 0.15,\n        max: 0.95,\n        onChange: handleStatusChange,\n        sx: {\n          color: getColor(selectedCell.status),\n          '& .MuiSlider-markLabel': {\n            fontSize: \"1.2rem\",\n            fontWeight: \"bold\",\n            textAlign: \"center\",\n            whiteSpace: \"nowrap\",\n            transform: \"translateX(-50%)\"\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flexGrow: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"success\",\n        onClick: handleSave,\n        sx: {\n          fontSize: \"1.2rem\",\n          fontWeight: \"bold\",\n          py: 1.5,\n          mt: \"auto\"\n        },\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_c = StatusModal;\nexport default StatusModal;\nvar _c;\n$RefreshReg$(_c, \"StatusModal\");","map":{"version":3,"names":["React","Modal","Box","Typography","Slider","Button","jsxDEV","_jsxDEV","UPDATE_API_URL","statusLevels","value","label","color","getColor","closest","reduce","prev","curr","Math","abs","getClosestStatus","formatDate","isoDate","year","month","day","split","StatusModal","selectedCell","setSelectedCell","refreshHeatmap","handleStatusChange","_","newValue","status","handleSave","closestStatus","formattedDate","x","fetch","method","headers","body","JSON","stringify","date","activity","then","console","log","open","onClose","children","sx","p","bgcolor","borderRadius","boxShadow","width","maxWidth","maxHeight","margin","mt","display","flexDirection","gap","fontFamily","justifyContent","alignItems","variant","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","step","marks","map","style","fontWeight","min","max","onChange","textAlign","whiteSpace","transform","flexGrow","onClick","py","_c","$RefreshReg$"],"sources":["/Users/guillermovarelli/Documents/workspace/act-front/src/form/StatusModal.js"],"sourcesContent":["import React from \"react\";\nimport Modal from \"@mui/material/Modal\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Slider from \"@mui/material/Slider\";\nimport Button from \"@mui/material/Button\";\n\nconst UPDATE_API_URL = \"http://localhost:8080/activities/update\";\n\nconst statusLevels = [\n  { value: 0.15, label: \"Suck\", color: \"#000000\" },\n  { value: 0.35, label: \"Failed\", color: \"#FF0000\" },\n  { value: 0.55, label: \"Regular\", color: \"#FFFF00\" },\n  { value: 0.75, label: \"Accomplished\", color: \"#00A100\" },\n  { value: 0.95, label: \"Excellence\", color: \"#0000FF\" },\n];\n\nconst getColor = (value) => {\n  let closest = statusLevels.reduce((prev, curr) =>\n    Math.abs(curr.value - value) < Math.abs(prev.value - value) ? curr : prev\n  );\n  return closest.color;\n};\n\nconst getClosestStatus = (value) => {\n  return statusLevels.reduce((prev, curr) =>\n    Math.abs(curr.value - value) < Math.abs(prev.value - value) ? curr : prev\n  );\n};\n\nconst formatDate = (isoDate) => {\n  const [year, month, day] = isoDate.split(\"-\");\n  return `${day}-${month}-${year}`;\n};\n\nconst StatusModal = ({ selectedCell, setSelectedCell, refreshHeatmap }) => {\n  if (!selectedCell) return null;\n\n  const handleStatusChange = (_, newValue) => {\n    setSelectedCell((prev) => ({ ...prev, status: newValue }));\n  };\n\n  const handleSave = () => {\n    const closestStatus = getClosestStatus(selectedCell.status);\n    const formattedDate = formatDate(selectedCell.x);\n\n    fetch(UPDATE_API_URL, {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        date: formattedDate,\n        activity: selectedCell.activity,\n        status: closestStatus.label,\n      }),\n    })\n    .then(() => {\n      console.log(\"Updated successfully\");\n      refreshHeatmap?.(); // ðŸ‘ˆ actualiza heatmap\n      setSelectedCell(null);\n    });\n  };\n\n  return (\n    <Modal open={!!selectedCell} onClose={() => setSelectedCell(null)}>\n      <Box\n        sx={{\n          p: 7,\n          bgcolor: \"#F5F5DC\",\n          borderRadius: 2,\n          boxShadow: 0,\n          width: \"90vw\",\n          maxWidth: 650,\n          maxHeight: 750,\n          margin: \"auto\",\n          mt: 18,\n          display: \"flex\",\n          flexDirection: \"column\",\n          gap: 1,\n          fontFamily: \"Arial, sans-serif\",\n        }}\n      >\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"flex-start\">\n          <Typography variant=\"body1\" color=\"text.secondary\" sx={{ fontSize: \"1.3rem\" }}>\n            <strong>Date:</strong> {selectedCell.x}\n          </Typography>\n          <Typography variant=\"body1\" color=\"text.secondary\" sx={{ fontSize: \"1.3rem\" }}>\n            <strong>Activity:</strong> {selectedCell.activity}\n          </Typography>\n        </Box>\n\n        <Slider\n          value={selectedCell.status}\n          step={0.01}\n          marks={statusLevels.map(({ value, label, color }) => ({\n            value,\n            label: (\n              <span style={{ color: color, fontSize: \"1.2rem\", fontWeight: \"bold\" }}>\n                {label}\n              </span>\n            ),\n          }))}\n          min={0.15}\n          max={0.95}\n          onChange={handleStatusChange}\n          sx={{\n            color: getColor(selectedCell.status),\n            '& .MuiSlider-markLabel': {\n              fontSize: \"1.2rem\",\n              fontWeight: \"bold\",\n              textAlign: \"center\",\n              whiteSpace: \"nowrap\",\n              transform: \"translateX(-50%)\",\n            },\n          }}\n        />\n\n        <br /><br />\n        <Box sx={{ flexGrow: 1 }} />\n\n        <Button\n          variant=\"contained\"\n          color=\"success\"\n          onClick={handleSave}\n          sx={{\n            fontSize: \"1.2rem\",\n            fontWeight: \"bold\",\n            py: 1.5,\n            mt: \"auto\",\n          }}\n        >\n          Save\n        </Button>\n      </Box>\n    </Modal>\n  );\n};\n\nexport default StatusModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}